{
  "name": "tailadmin-react",
  "private": true,
  "version": "2.0.2",
  "type": "module",
  "scripts": {
    "db:init": "tsx scripts/cleanup.ts && node scripts/generate-schema.js && node scripts/generate-migration.js && prisma migrate reset --force && prisma generate && tsx api/database/seed.ts",
    "dev": "vite",
    "api:dev": "tsx --watch api/index.ts",
    "build": "tsc -b && vite build && tsx scripts/generate-openapijson.ts",
    "lint": "eslint .",
    "preview": "vite preview",
    "api": "tsx api/index.ts",
    "dev:all": "concurrently \"tsx --watch api/index.ts\" \"vite\"",
    "start:all": "concurrently \"tsx api/index.ts\" \"vite preview\"",
    "validate": "tsc --noEmit",
    "cleanup": "tsx scripts/cleanup.ts",
    "schema:generate": "node scripts/generate-schema.js",
    "migration:generate": "node scripts/generate-migration.js",
    "openapi:generate": "tsx scripts/generate-openapijson.ts",
    "separator": "#-----------------------------------------------------------------------",
    "db:reset": "prefix:generate && prisma migrate reset",
    "db:status": "prefix:generate && prisma migrate status",
    "db:deploy": "prefix:generate && prisma migrate deploy",
    "db:migration": "prefix:generate && prisma migrate dev --name migration_name",
    "prisma:studio": "prisma studio --schema=prisma/schema.generated",
    "db:seed": "tsx api/database/seed.ts",
    "db:seed-permissions": "tsx api/database/seed-permissions.ts",
    "test:email": "tsx src/lib/email/example.ts",
    "test:uuid": "tsx api/utils/uuid.test.ts",
    "test:configuration": "tsx api/utils/configuration-example.ts",
    "test:mcp": "node test/mcp-client.js",
    "test:mcp:python": "python test/mcp-client.py",
    "test:mcp:all": "node test/mcp-client.js && python test/mcp-client.py",
    "test:mcp:user-activity": "node test/mcp-user-activity-test.js",
    "test:mcp:user-activity:python": "python test/mcp-user-activity-test.py",
    "test:mcp:user-activity:interactive": "node test/mcp-user-activity-test.js --interactive",
    "test:mcp:ai-integration": "node test/mcp-ai-integration-test.js",
    "test:mcp:ai-integration:python": "python test/mcp-ai-integration-test.py",
    "test:mcp:ai-integration:openai": "python test/mcp-ai-integration-test.py --openai-example",
    "test:mcp:ai-integration:interactive": "python test/mcp-ai-integration-test.py --interactive",
    "test": "vitest",
    "test:run": "vitest run",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "test:seed": "node scripts/test-seed.js",
    "test:seed:watch": "vitest --watch api/database/*.test.ts",
    "test:seed:unit": "vitest run api/database/seed.test.ts",
    "test:seed:integration": "vitest run api/database/seedDatabase.integration.test.ts",
    "test:api": "vitest run --config vitest.server.config.ts",
    "test:api:watch": "vitest --watch --config vitest.server.config.ts",
    "test:api:coverage": "vitest run --coverage --config vitest.server.config.ts",
    "test:dev-console": "vitest run test/devConsoleProtection.test.ts",
    "test:dev-console:watch": "vitest --watch test/devConsoleProtection.test.ts",
    "test:context-menu": "vitest run test/contextMenuProtection.test.ts",
    "test:context-menu:watch": "vitest --watch test/contextMenuProtection.test.ts",
    "test:security": "vitest run test/devConsoleProtection.test.ts test/contextMenuProtection.test.ts",
    "postinstall": "node scripts/postinstall.js"
  },
  "dependencies": {
    "@fullcalendar/core": "^6.1.15",
    "@fullcalendar/daygrid": "^6.1.15",
    "@fullcalendar/interaction": "^6.1.15",
    "@fullcalendar/list": "^6.1.15",
    "@fullcalendar/react": "^6.1.15",
    "@fullcalendar/timegrid": "^6.1.15",
    "@headlessui/react": "^2.2.7",
    "@heroicons/react": "^2.2.0",
    "@prisma/client": "^6.13.0",
    "@react-oauth/google": "^0.12.2",
    "@tanstack/react-table": "^8.21.3",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/pg": "^8.15.5",
    "apexcharts": "^4.1.0",
    "bcryptjs": "^3.0.2",
    "clsx": "^2.1.1",
    "cors": "^2.8.5",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "flatpickr": "^4.6.13",
    "framer-motion": "^12.23.12",
    "glob": "^11.0.3",
    "jsonwebtoken": "^9.0.2",
    "marked": "^16.1.2",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.5",
    "pg": "^8.16.3",
    "react": "^19.0.0",
    "react-apexcharts": "^1.7.0",
    "react-dnd": "^16.0.1",
    "react-dnd-html5-backend": "^16.0.1",
    "react-dom": "^19.0.0",
    "react-dropzone": "^14.3.5",
    "react-hot-toast": "^2.5.2",
    "react-icons": "^5.5.0",
    "react-router": "^7.1.5",
    "react-textarea-autosize": "^8.5.9",
    "rollup-plugin-visualizer": "^6.0.3",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "swiper": "^11.2.3",
    "tailwind-merge": "^3.0.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.19.0",
    "@tailwindcss/postcss": "^4.0.8",
    "@testing-library/react": "^16.3.0",
    "@types/nodemailer": "^6.4.17",
    "@types/react": "^19.0.12",
    "@types/react-dom": "^19.0.4",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/ui": "^3.2.4",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "eslint": "^9.19.0",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.18",
    "globals": "^15.14.0",
    "identity-obj-proxy": "^3.0.0",
    "jsdom": "^26.1.0",
    "postcss": "^8.5.2",
    "prisma": "^6.13.0",
    "tailwindcss": "^4.0.8",
    "tsx": "^4.20.3",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.41.0",
    "vite": "^6.1.0",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-svgr": "^4.3.0",
    "vitest": "^3.2.4"
  }
}
